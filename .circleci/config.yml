version: 2.1

orbs:
  docker: circleci/docker@2.0.1

workflows:
  test:
    jobs:
      - checkout
      - test-frontend:
          requires:
            - checkout
      - test-backend:
          requires:
            - checkout
      - docker/publish:
          docker-password: DOCKER_PASS 
          docker-username: DOCKER_USER
          image: icij/prophecies 
          tag: "$CIRCLE_SHA1,latest" 
          requires:
            - checkout
            - test-frontend
            - test-backend
          filters:
            tags:
                only: /^v[0-9.]*/
            branches:
                ignore: /.*/
jobs:
  checkout:
    docker:
      - image: circleci/node:14.15.5
    working_directory: ~/repository/
    steps:
      - checkout
      - save_cache:
          name: Save the app bundle for downstream jobs
          key: repository-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repository/

  test-frontend:
    docker:
      - image: circleci/node:14.15.5
    working_directory: ~/repository/
    steps:
      - restore_cache:
          name: Restore app bundle repository from the `checkout` job
          key: repository-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          name: Restore node dependencies from previous builds
          key: node-dependencies-cache-{{ .Branch }}-{{ checksum "prophecies/apps/frontend/package.json" }}
      - run:
          name: Install node dependencies with yarn
          command: yarn
      - save_cache:
          name: Save dependencies cache for future builds
          key: node-dependencies-cache-{{ .Branch }}-{{ checksum "prophecies/apps/frontend/package.json" }}
          paths:
            - ./prophecies/apps/frontend/node_modules/
      - run:
          name: Run unit tests
          command: yarn test:unit --maxWorkers 2

  test-backend:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repository/
    steps:
      - restore_cache:
          name: Restore app bundle repository from the `checkout` job
          key: repository-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          name: Restore virtualenvs from previous builds
          key: virtualenvs-dependencies-cache-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install pipenv and project's pip packages
          command: |
            sudo pip install pipenv
            pipenv install --dev
      - save_cache:
          name: Save virtualenvs cache for future builds
          key: virtualenvs-dependencies-cache-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/.local/share/virtualenvs/"
      - run:
          name: Run unit tests
          command: pipenv run python manage.py test --settings=prophecies.settings.test