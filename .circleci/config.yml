---
version: 2.1

orbs:
  docker: circleci/docker@2.0.1

workflows:
  test:
    jobs:
      - test-frontend:
          filters:
            tags:
              only: /.*/
      - test-backend:
          filters:
            tags:
              only: /.*/
      - docker/publish:
          docker-password: DOCKER_PASS
          docker-username: DOCKER_USER
          image: icij/prophecies
          tag: ${CIRCLE_TAG/#v},latest
          registry: registry.hub.docker.com
          requires:
            - test-frontend
            - test-backend
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

jobs:
  test-frontend:
    docker:
      - image: circleci/node:16-bullseye
    working_directory: ~/repository/
    steps:
      - checkout
      - restore_cache:
          name: Restore node dependencies from previous builds
          key: node-dependencies-cache-{{ .Branch }}-{{ checksum "prophecies/apps/frontend/yarn.lock" }}
      - run:
          name: Install node dependencies with yarn
          command: yarn
      - save_cache:
          name: Save dependencies cache for future builds
          key: node-dependencies-cache-{{ .Branch }}-{{ checksum "prophecies/apps/frontend/yarn.lock" }}
          paths:
            - ./prophecies/apps/frontend/node_modules/
      - run:
          name: Run unit tests
          command: yarn test:unit --maxWorkers 2
      - run:
          name: Build the frontend
          command: yarn build

  test-backend:
    docker:
      - image: circleci/python:3.9
    working_directory: ~/repository/
    steps:
      - checkout
      - restore_cache:
          name: Restore virtualenvs from previous builds
          key: virtualenvs-dependencies-cache-{{ .Branch }}-{{ checksum "poetry.lock" }}
      - run:
          name: Install poetry and project's pip packages
          command: |
            curl -sSL https://install.python-poetry.org | python3 -
            poetry install --with dev
      - save_cache:
          name: Save virtualenvs cache for future builds
          key: virtualenvs-dependencies-cache-{{ .Branch }}-{{ checksum "poetry.lock" }}
          paths:
            - ~/.local/share/virtualenvs/
      - run:
          name: Run unit tests
          command: poetry run python manage.py test --settings=prophecies.settings.test
